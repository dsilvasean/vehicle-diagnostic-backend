openapi: 3.0.0
info:
  title: My API
  version: 1.0.0
  description: API Documentation for My Express App

servers:
  - url: http://localhost:3000
    description: Local server
    
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: [] # Apply JWT globally (optional)


tags:
  - name: Authentication
    description: API endpoints for user authentication
  - name: General
    description: General API endpoints

paths:
  /api/user/register:
    post:
      summary: Register a new user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - lastName
                - email
                - phone
                - password
              properties:
                firstName:
                  type: string
                  example: "John"
                lastName:
                  type: string
                  example: "Doe"
                email:
                  type: string
                  example: "john@example.com"
                password:
                  type: string
                  example: "securepassword123"
                phone:
                  type: string
                  example: "91 1234567890"
      responses:
        201:
          description: User registered successfully
        400:
          description: Missing required fields
        500:
          description: Internal server error

  /api/user/login:
    post:
      summary: Login a user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: "john@example.com"
                password:
                  type: string
                  example: "securepassword123"
      responses:
        201:
          description: User logged in successfully
        400:
          description: Missing required fields
        500:
          description: Internal server error

  /api/user/profile:
      get:
        summary: API to interact with the assistant
        security:
          - bearerAuth: []  # Require JWT authentication for this endpoint
        tags:
          - General
        responses:
          "200":
            description: Successfully retrieved user profile
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                    firstName:
                      type: string
                    lastName:
                      type: string
                    email:
                      type: string
          "401":
            description: Unauthorized (Invalid or missing token)
          "403":
            description: Forbidden (Token expired or invalid) 
  /api/upload:
    post:
      summary: Upload a file
      description: Uploads a file with a specified type.
      tags:
          - General
      parameters:
        - name: type
          in: query
          description: The type of the file being uploaded.
          required: true
          schema:
            type: string
            enum: [image, video, document, avatar]  # Define allowed types
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The file to upload.
      responses:
        "200":
          description: File uploaded successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "File uploaded successfully."
                  fileUrl:
                    type: string
                    example: "https://example.com/uploads/file.jpg"
        "400":
          description: Bad request (e.g., missing file or invalid type).
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid file type."
        "500":
          description: Internal server error.

  /api/chat:
    post:
      summary: API to interact with the assistant
      description: Accepts a JSON object and returns the same data with a success message.
      tags: [General]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  example: "Why is my engine overheating"
      responses:
        200:
          description: Successfully processed request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Data received successfully"
                  data:
                    type: object
                    properties:
                      response:
                        type: string
                        example: "Because of so and so reason"
